{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"COS863 Machine Learning It covers the Machine Learning class' activities from PESC/COPPE at Federal University of Rio de Janeiro in 2021/01. Requirements Python Poetry Podman Buildah GCC","title":"Home"},{"location":"#cos863-machine-learning","text":"It covers the Machine Learning class' activities from PESC/COPPE at Federal University of Rio de Janeiro in 2021/01.","title":"COS863 Machine Learning"},{"location":"#requirements","text":"Python Poetry Podman Buildah GCC","title":"Requirements"},{"location":"api-documentation/","text":"tools tools.chart_tools ChartTools Objects class ChartTools() Class designed to handle chart operations check_figure | check_figure(figure) Method used to check the given figure Arguments : figure : Plotly figure :type figure: plotly.graph_object.Figure :raises: AttributeError to_base64 | to_base64(figure) Method used to transform a Plotly figure into a base64 encoded image string Arguments : figure : Plotly figure :type figure: plotly.graph_object.Figure Returns : str -- Encoded figure as a base64 string tools.reports :mod: reports -- Report Wrapper .. module:: reports :synopsis: Report building tools :platform: OpenSuse 15.2 on WSL2 (Windows 10) .. moduleauthor:: Bruno Lima blcardoso@cos.ufrj.br tools.reports.block_builder BlockBuilder Objects class BlockBuilder() Class designed on the builder pattern to create reports interactively Arguments : contents : it stores the report contents :type contents: list. check_empty_field | check_empty_field(field, error_message) Method used to check if a given field is empty or none Arguments : field : Field to check :type field: obj. error_message : Message to raises if the given field is empty or none :type error_message: str. :raises: AttributeError add_title | add_title(title, tag=\"#\") Method used to define the block's title by add the given string to the dictionary. Arguments : title : Block's title :type title: str. Returns : the instance of the class add_description | add_description(text) Method used to define the block's description by add the given string to the dictionary. Arguments : text : Block's description :type text: str. Returns : the instance of the class add_paragraph | add_paragraph(paragraph) Method used to insert a paragraph into the block Arguments : paragraph : Paragraph to be inserted :type paragraph: str Returns : the instance of the class add_image | add_image(image_path) Method used to inject an image into the block as a paragraph Arguments : image_path : Image path :type image_path: str Returns : the instance of the class export | export(file_name, output_path) Method used to export the report to a file Arguments : file_name : Output file name :type file_name: str output_path : Output folder to store the final file :type output_path: str Returns : the instance of the class __str__ | __str__() Method used to transform the block content into a string","title":"API Documentation"},{"location":"api-documentation/#tools","text":"","title":"tools"},{"location":"api-documentation/#toolschart_tools","text":"","title":"tools.chart_tools"},{"location":"api-documentation/#charttools-objects","text":"class ChartTools() Class designed to handle chart operations","title":"ChartTools Objects"},{"location":"api-documentation/#check_figure","text":"| check_figure(figure) Method used to check the given figure Arguments : figure : Plotly figure :type figure: plotly.graph_object.Figure :raises: AttributeError","title":"check_figure"},{"location":"api-documentation/#to_base64","text":"| to_base64(figure) Method used to transform a Plotly figure into a base64 encoded image string Arguments : figure : Plotly figure :type figure: plotly.graph_object.Figure Returns : str -- Encoded figure as a base64 string","title":"to_base64"},{"location":"api-documentation/#toolsreports","text":"","title":"tools.reports"},{"location":"api-documentation/#mod-reports-report-wrapper","text":".. module:: reports :synopsis: Report building tools :platform: OpenSuse 15.2 on WSL2 (Windows 10) .. moduleauthor:: Bruno Lima blcardoso@cos.ufrj.br","title":":mod: reports -- Report Wrapper"},{"location":"api-documentation/#toolsreportsblock_builder","text":"","title":"tools.reports.block_builder"},{"location":"api-documentation/#blockbuilder-objects","text":"class BlockBuilder() Class designed on the builder pattern to create reports interactively Arguments : contents : it stores the report contents :type contents: list.","title":"BlockBuilder Objects"},{"location":"api-documentation/#check_empty_field","text":"| check_empty_field(field, error_message) Method used to check if a given field is empty or none Arguments : field : Field to check :type field: obj. error_message : Message to raises if the given field is empty or none :type error_message: str. :raises: AttributeError","title":"check_empty_field"},{"location":"api-documentation/#add_title","text":"| add_title(title, tag=\"#\") Method used to define the block's title by add the given string to the dictionary. Arguments : title : Block's title :type title: str. Returns : the instance of the class","title":"add_title"},{"location":"api-documentation/#add_description","text":"| add_description(text) Method used to define the block's description by add the given string to the dictionary. Arguments : text : Block's description :type text: str. Returns : the instance of the class","title":"add_description"},{"location":"api-documentation/#add_paragraph","text":"| add_paragraph(paragraph) Method used to insert a paragraph into the block Arguments : paragraph : Paragraph to be inserted :type paragraph: str Returns : the instance of the class","title":"add_paragraph"},{"location":"api-documentation/#add_image","text":"| add_image(image_path) Method used to inject an image into the block as a paragraph Arguments : image_path : Image path :type image_path: str Returns : the instance of the class","title":"add_image"},{"location":"api-documentation/#export","text":"| export(file_name, output_path) Method used to export the report to a file Arguments : file_name : Output file name :type file_name: str output_path : Output folder to store the final file :type output_path: str Returns : the instance of the class","title":"export"},{"location":"api-documentation/#__str__","text":"| __str__() Method used to transform the block content into a string","title":"__str__"}]}